<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinker.cloud.upms.mapper.SysDictBizMapper">
    <resultMap id="entity" type="com.thinker.cloud.upms.model.entity.SysDictBiz"/>
    <resultMap id="vo" extends="entity" type="com.thinker.cloud.upms.api.sys.model.vo.SysDictBizVO"/>
    <sql id="condition">
        <if test="query != null">
            <if test="query.id != null">
                and base.id = #{query.id}
            </if>
            <if test="query.parentId != null">
                and base.parent_id = #{query.parentId}
            </if>
            <if test="query.code != null and query.code != ''">
                and base.code like concat('%',#{query.code},'%')
            </if>
            <if test="query.label != null and query.label != ''">
                and base.label like concat('%',#{query.label},'%')
            </if>
            <if test="query.value != null and query.value != ''">
                and base.value like concat('%',#{query.value},'%')
            </if>
            <if test="query.sort != null">
                and base.sort = #{query.sort}
            </if>
            <if test="query.description != null and query.description != ''">
                and base.description like concat('%',#{query.description},'%')
            </if>
            <if test="query.extendsInfo != null and query.extendsInfo != ''">
                and base.extends_info like concat('%',#{query.extendsInfo},'%')
            </if>
            <if test="query.tenantId != null">
                and base.tenant_id = #{query.tenantId}
            </if>
            <if test="query.isIncludeDelete == null or !query.isIncludeDelete">
                and base.deleted = false
            </if>
            <if test="query.createBy != null">
                and base.create_by = #{query.createBy}
            </if>
            <if test="query.createTime != null">
                and base.create_time = #{query.createTime}
            </if>
            <if test="query.startCreateTime != null">
                and base.create_time >= #{query.startCreateTime}
            </if>
            <if test="query.endCreateTime != null">
                and base.create_time &lt;= #{query.endCreateTime}
            </if>
            <if test="query.updateBy != null">
                and base.update_by = #{query.updateBy}
            </if>
            <if test="query.updateTime != null">
                and base.update_time = #{query.updateTime}
            </if>
            <if test="query.startUpdateTime != null">
                and base.update_time >= #{query.startUpdateTime}
            </if>
            <if test="query.endUpdateTime != null">
                and base.update_time &lt;= #{query.endUpdateTime}
            </if>
            <if test="query.ids != null">
                and
                <choose>
                    <when test="query.ids.size() > 0">
                        <foreach collection="query.ids" item="id" open="base.id in(" separator="," close=")">
                            #{id}
                        </foreach>
                    </when>
                    <otherwise>
                        false
                    </otherwise>
                </choose>
            </if>
        </if>
    </sql>

    <select id="page" resultMap="vo">
        select base.*
        from sys_dict_biz as base
        <where>
            <include refid="condition"/>
        </where>
        <choose>
            <when test="query.orderField != null and query.orderField != ''">
                order by ${query.orderField} ${query.order}
            </when>
            <otherwise>
                order by base.create_time desc
            </otherwise>
        </choose>
    </select>

    <select id="list" resultMap="vo">
        select base.*
        from sys_dict_biz as base
        <where>
            <include refid="condition"/>
        </where>
        <choose>
            <when test="query.orderField != null and query.orderField != ''">
                order by ${query.orderField} ${query.order}
            </when>
            <otherwise>
                order by base.create_time desc
            </otherwise>
        </choose>

    </select>

    <select id="idsByQuery" resultType="java.lang.Long">
        select base.id
        from sys_dict_biz as base
        <where>
            <include refid="condition"/>
        </where>
    </select>

    <select id="countByQuery" resultType="java.lang.Integer">
        select count(1)
        from sys_dict_biz as base
        <where>
            <include refid="condition"/>
        </where>
    </select>

    <select id="selectById" resultMap="entity">
        select base.*
        from sys_dict_biz as base
        where base.id = #{id}
        and base.deleted = false
    </select>

    <select id="findDetail" resultMap="vo">
        select base.*
        from sys_dict_biz as base
        where base.id = #{id}
        and base.deleted = false
    </select>
</mapper>
